[profile.default]
  auto_detect_solc = false
  bytecode_hash = "none"
  cbor_metadata = false
  fs_permissions = [{ access = "read", path = "./optimized-out" }]
  libs = ["lib"]
  gas_reports = [
    "SablierV2Comptroller",
    "SablierV2LockupLinear",
    "SablierV2LockupPro",
  ]
  optimizer = true
  optimizer_runs = 5_000
  out = "out"
  script = "script"
  solc = "0.8.18"
  src = "src"
  test = "test"

[profile.default.fuzz]
  max_test_rejects = 1_000_000 # Number of times `vm.assume` can fail
  runs = 1_000

[profile.default.invariant]
  call_override = false # Override unsafe external calls to perform reentrancy checks
  fail_on_revert = true
  depth = 200           # Number of calls executed in one run

# Speed up compilation and tests during development
[profile.lite]
  fuzz = { runs = 50 }
  invariant = { depth = 50, runs = 50 }
  optimizer = false

# Compile only the production code with IR
[profile.optimized]
  out = "optimized-out"
  test = "src"
  via_ir = true

# See "SMTChecker and Formal Verification" in the Solidity docs
[profile.smt.model_checker]
  engine = "chc" # constrained Horn clauses
  showUnproved = true
  timeout = 100_000 # in milliseconds
  targets = [
    "assert",
    "constantCondition",
    "divByZero",
    "outOfBounds",
    "overflow",
    "underflow",
  ]

[profile.smt.model_checker.contracts]
  "src/SablierV2LockupLinear.sol" = ["SablierV2LockupLinear"]
  "src/SablierV2LockupPro.sol" = ["SablierV2LockupPro"]

# Test the optimized contracts without re-compiling them
[profile.test-optimized]
  fuzz = { runs = 5_000 }
  invariant = { depth = 150, runs = 100 }
  src = "test"
  verbosity = 4

[etherscan]
  ethereum = { key = "${ETHERSCAN_API_KEY}" }
  goerli = { key = "${ETHERSCAN_API_KEY}" }

[rpc_endpoints]
  ethereum = "https://eth-mainnet.g.alchemy.com/v2/${ALCHEMY_API_KEY}"
  goerli = "https://goerli.infura.io/v3/${INFURA_API_KEY}"
  localhost = "http://localhost:8545"
