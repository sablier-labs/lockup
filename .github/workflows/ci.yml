name: "CI"

concurrency:
  group: ${{github.workflow}}-${{github.ref}}
  cancel-in-progress: true

env:
  API_KEY_ETHERSCAN: ${{ secrets.API_KEY_ETHERSCAN }}
  API_KEY_INFURA: ${{ secrets.API_KEY_INFURA }}
  RPC_URL_MAINNET: ${{ secrets.RPC_URL_MAINNET }}

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

jobs:
  lint:
    runs-on: "ubuntu-latest"
    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v3"

      - name: "Install Pnpm"
        uses: "pnpm/action-setup@v2"
        with:
          version: "latest"

      - name: "Install Node.js"
        uses: "actions/setup-node@v3"
        with:
          cache: "pnpm"
          node-version: "lts/*"

      - name: "Install the Node.js dependencies"
        run: "pnpm install"

      - name: "Lint the contracts"
        run: "pnpm lint"

      - name: "Add lint summary"
        run: |
          echo "## Lint result" >> $GITHUB_STEP_SUMMARY
          echo "✅ Passed" >> $GITHUB_STEP_SUMMARY

  build:
    runs-on: "ubuntu-latest"
    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v3"
        with:
          submodules: "recursive"

      - name: "Install Foundry"
        uses: "foundry-rs/foundry-toolchain@v1"

      - name: "Show the Foundry config"
        run: "forge config"

      - name: "Produce an optimized build with --via-ir"
        run: "FOUNDRY_PROFILE=optimized forge build"

      - name: "Cache the build so that it can be re-used by the other jobs"
        uses: "actions/cache/save@v3"
        with:
          path: "optimized-out"
          key: "foundry-build-${{ github.sha }}"

      - name: "Store contract ABIs as artifacts"
        uses: "actions/upload-artifact@v3"
        with:
          name: contract-abis
          path: |
            optimized-out/Errors.sol/Errors.json
            optimized-out/Events.sol/Events.json
            optimized-out/IERC20.sol/IERC20.json
            optimized-out/IERC721.sol/IERC721.json
            optimized-out/IERC721Metadata.sol/IERC721Metadata.json
            optimized-out/IAdminable.sol/IAdminable.json
            optimized-out/ISablierV2Comptroller.sol/ISablierV2Comptroller.json
            optimized-out/ISablierV2Config.sol/ISablierV2Config.json
            optimized-out/ISablierV2Lockup.sol/ISablierV2Lockup.json
            optimized-out/ISablierV2LockupLinear.sol/ISablierV2LockupLinear.json
            optimized-out/ISablierV2LockupPro.sol/ISablierV2LockupPro.json
            optimized-out/ISablierV2Recipient.sol/ISablierV2Recipient.json
            optimized-out/ISablierV2Sender.sol/ISablierV2Sender.json
            optimized-out/Adminable.sol/Adminable.json
            optimized-out/SablierV2Comptroller.sol/SablierV2Comptroller.json
            optimized-out/SablierV2Config.sol/ISablierV2Config.json
            optimized-out/SablierV2Lockup.sol/SablierV2Lockup.json
            optimized-out/SablierV2LockupLinear.sol/SablierV2LockupLinear.json
            optimized-out/SablierV2LockupPro.sol/SablierV2LockupPro.json

      - name: "Add build summary"
        run: |
          echo "## Build result" >> $GITHUB_STEP_SUMMARY
          echo "✅ Passed" >> $GITHUB_STEP_SUMMARY

  test-unit:
    env:
      FOUNDRY_FUZZ_RUNS: "5000"
    needs: ["lint", "build"]
    runs-on: "ubuntu-latest"
    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v3"
        with:
          submodules: "recursive"

      - name: "Install Foundry"
        uses: "foundry-rs/foundry-toolchain@v1"

      - name: "Restore the cached build"
        uses: "actions/cache/restore@v3"
        with:
          fail-on-cache-miss: true
          key: "foundry-build-${{ github.sha }}"
          path: "optimized-out"

      - name: "Run the unit tests against the optimized build"
        run: "FOUNDRY_PROFILE=test-optimized forge test --match-path \"test/unit/**/*.sol\""

      - name: "Add test summary"
        run: |
          echo "## Unit tests result" >> $GITHUB_STEP_SUMMARY
          echo "✅ Passed" >> $GITHUB_STEP_SUMMARY

  test-fuzz:
    env:
      FOUNDRY_FUZZ_RUNS: "50000"
    needs: ["lint", "build"]
    runs-on: "ubuntu-latest"
    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v3"
        with:
          submodules: "recursive"

      - name: "Install Foundry"
        uses: "foundry-rs/foundry-toolchain@v1"

      - name: "Restore the cached build"
        uses: "actions/cache/restore@v3"
        with:
          fail-on-cache-miss: true
          key: "foundry-build-${{ github.sha }}"
          path: "optimized-out"

      - name: "Run the fuzz tests against the optimized build"
        run: "FOUNDRY_PROFILE=test-optimized forge test --match-path \"test/fuzz/**/*.sol\""

      - name: "Add test summary"
        run: |
          echo "## Fuzz tests result" >> $GITHUB_STEP_SUMMARY
          echo "✅ Passed" >> $GITHUB_STEP_SUMMARY

  test-invariant:
    needs: ["lint", "build"]
    runs-on: "ubuntu-latest"
    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v3"
        with:
          submodules: "recursive"

      - name: "Install Foundry"
        uses: "foundry-rs/foundry-toolchain@v1"

      - name: "Restore the cached build"
        uses: "actions/cache/restore@v3"
        with:
          fail-on-cache-miss: true
          key: "foundry-build-${{ github.sha }}"
          path: "optimized-out"

      - name: "Run the invariant tests against the optimized build"
        run: "FOUNDRY_PROFILE=test-optimized forge test --match-path \"test/invariant/**/*.sol\""

      - name: "Add test summary"
        run: |
          echo "## Invariant tests result" >> $GITHUB_STEP_SUMMARY
          echo "✅ Passed" >> $GITHUB_STEP_SUMMARY

  test-fork:
    env:
      FOUNDRY_FUZZ_RUNS: "1000"
    needs: ["lint", "build"]
    runs-on: "ubuntu-latest"
    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v3"
        with:
          submodules: "recursive"

      - name: "Install Foundry"
        uses: "foundry-rs/foundry-toolchain@v1"

      - name: "Restore the cached build"
        uses: "actions/cache/restore@v3"
        with:
          fail-on-cache-miss: true
          key: "foundry-build-${{ github.sha }}"
          path: "optimized-out"

      - name: "Generate fuzz seed that changes weekly to avoid burning through RPC allowance"
        run: |
          echo "FOUNDRY_FUZZ_SEED=$(echo $(($EPOCHSECONDS / 604800)))" >> $GITHUB_ENV

      - name: "Run the fork tests against the optimized build"
        run: "FOUNDRY_PROFILE=test-optimized forge test --match-path \"test/fork/**/*.sol\""

      - name: "Add test summary"
        run: |
          echo "## Fork tests result" >> $GITHUB_STEP_SUMMARY
          echo "✅ Passed" >> $GITHUB_STEP_SUMMARY

  coverage:
    needs: ["lint", "build"]
    runs-on: "ubuntu-latest"
    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v3"
        with:
          submodules: "recursive"

      - name: "Install Foundry"
        uses: "foundry-rs/foundry-toolchain@v1"

      - name: "Generate the coverage report"
        run: "forge coverage --report lcov"

      - name: "Upload coverage report to Codecov"
        uses: "codecov/codecov-action@v3"
        with:
          files: "./lcov.info"
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: "Add coverage summary"
        run: |
          echo "## Coverage result" >> $GITHUB_STEP_SUMMARY
          echo "✅ Uploaded to Codecov" >> $GITHUB_STEP_SUMMARY
