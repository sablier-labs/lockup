withdraw.t.sol
├── when the stream does not exist
│  └── it should revert
└── when the stream exists
   ├── when the caller is not authorized
   │  └── it should revert
   └── when the caller is authorized
      ├── when the caller is the sender
      │  └── it should make the withdrawal and update the withdrawn amount
      ├── when the caller is an approved operator
      │  └── it should make the withdrawal and update the withdrawn amount
      └── when the caller is the recipient
         ├── when the original recipient transferred ownership of the stream
         │  └── it should revert
         └── when the original recipient did not transfer ownership of the stream
            ├── when the withdraw amount is zero
            │  └── it should revert
            └── when the withdraw amount is not zero
               ├── when the amount is greater than the withdrawable amount
               │  └── it should revert
               └── when the amount is less than or equal to the withdrawable amount
                  ├── when the stream ended
                  │  └── it should make the withdrawal and delete the stream and burn the NFT
                  └── when the stream did not end
                     ├── when the recipient is not a contract
                     │  └── it should make the withdrawal and update the withdrawn amount
                     └── when the recipient is a contract
                        ├── when the recipient does not implement the hook
                        │  └── it should make the withdrawal and update the withdrawn amount
                        └── when the recipient implements the hook
                           ├── when the recipient reverts
                           │  └── it should ignore the revert and make the withdrawal and update the withdrawn amount
                           └── when the recipient does not revert
                              ├── when there is reentrancy
                              │  └── it should make the multiple withdrawals and update the withdrawn amounts
                              └── when there is no reentrancy
                                 ├── it should make the withdrawal and update the withdrawn amount
                                 └── it should emit a Withdraw event
