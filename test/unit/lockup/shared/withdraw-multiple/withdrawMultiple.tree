withdrawMultiple.t.sol
├── when the call is a delegate call
│  └── it should revert
└── when the call is not a delegate call
   ├── when the provided address is zero
   │  └── it should revert
   └── when the provided address is not zero
      ├── when the array counts are not equal
      │  └── it should revert
      └── when the array counts are equal
         ├── when the array counts are zero
         │  └── it should do nothing
         └── when the array counts are not zero
            ├── when all streams are either null or depleted
            │  └── it should revert
            ├── when some streams are either null or depleted
            │  └── it should revert
            └── when all streams are neither null nor depleted
               ├── when the caller is unauthorized for all streams
               │  ├── when the caller is a malicious third party
               │  │  └── it should revert
               │  ├── when the caller is the sender
               │  │  └── it should revert
               │  └── when the caller is a former recipient
               │     └── it should revert
               ├── when the caller is unauthorized for some streams
               │  ├── when the caller is a malicious third party
               │  │  └── it should revert
               │  └── when the caller is a former recipient
               │     └── it should revert
               └── when the caller is authorized for all streams
                  ├── when the caller is an approved third party
                  │  ├── it should make the withdrawals
                  │  └── it should update the withdrawn amounts
                  └── when the caller is the recipient
                     ├── when some amounts are zero
                     │  └── it should revert
                     └── when none of the amounts are zero
                        ├── when some amounts are greater than the withdrawable amounts
                        │  └── it should revert
                        └── when all amounts are less than or equal to the withdrawable amounts
                           ├── it should make the withdrawals
                           ├── it should update the statuses
                           ├── it should update the withdrawn amounts
                           └── it should emit multiple {WithdrawFromLockupStream} events
