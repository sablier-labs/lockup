cancel.t.sol
├── given delegate called
│  └── it should revert
└── given not delegate called
   ├── when the id references a null stream
   │  └── it should revert
   └── given the id does not reference a null stream
      ├── given the stream is cold
      │  ├── when the stream's status is "DEPLETED"
      │  │  └── it should revert
      │  ├── when the stream's status is "CANCELED"
      │  │  └── it should revert
      │  └── when the stream's status is "SETTLED"
      │     └── it should revert
      └── given the stream is warm
         ├── given the caller is unauthorized
         │  ├── when the caller is a malicious third party
         │  │  └── it should revert
         │  ├── when the caller is an approved third party
         │  │  └── it should revert
         │  └── when the caller is a former recipient
         │     └── it should revert
         └── given the caller is authorized
            ├── when the stream is not cancelable
            │  └── it should revert
            └── given the stream is cancelable
               ├── when the stream's status is "PENDING"
               │  ├── it should cancel the stream
               │  ├── it should mark the stream as depleted
               │  └── it should make the stream not cancelable
               └── given the stream's status is "STREAMING"
                  ├── given the caller is the sender
                  │  ├── when the recipient is not a contract
                  │  │  ├── it should cancel the stream
                  │  │  └── it should mark the stream as canceled
                  │  └── given the recipient is a contract
                  │     ├── when the recipient does not implement the hook
                  │     │  ├── it should cancel the stream
                  │     │  ├── it should mark the stream as canceled
                  │     │  ├── it should call the recipient hook
                  │     │  └── it should ignore the revert
                  │     └── given the recipient implements the hook
                  │        ├── when the recipient reverts
                  │        │  ├── it should cancel the stream
                  │        │  ├── it should mark the stream as canceled
                  │        │  ├── it should call the recipient hook
                  │        │  └── it should ignore the revert
                  │        └── given the recipient does not revert
                  │           ├── when there is reentrancy
                  │           │  ├── it should cancel the stream
                  │           │  ├── it should mark the stream as canceled
                  │           │  ├── it should call the recipient hook
                  │           │  └── it should ignore the revert
                  │           └── when there is no reentrancy
                  │              ├── it should cancel the stream
                  │              ├── it should mark the stream as canceled
                  │              ├── it should make the stream not cancelable
                  │              ├── it should update the refunded amount
                  │              ├── it should refund the sender
                  │              ├── it should call the recipient hook
                  │              ├── it should emit a {CancelLockupStream} event
                  │              └── it should emit a {MetadataUpdate} event
                  └── given the caller is the recipient
                     ├── when the sender is not a contract
                     │  ├── it should cancel the stream
                     │  └── it should mark the stream as canceled
                     └── given the sender is a contract
                        ├── when the sender does not implement the hook
                        │  ├── it should cancel the stream
                        │  ├── it should mark the stream as canceled
                        │  ├── it should call the sender hook
                        │  └── it should ignore the revert
                        └── given the sender implements the hook
                              ├── when the sender reverts
                              │  ├── it should cancel the stream
                              │  ├── it should mark the stream as canceled
                              │  ├── it should call the sender hook
                              │  └── it should ignore the revert
                              └── given the sender does not revert
                                 ├── when there is reentrancy
                                 │  ├── it should cancel the stream
                                 │  ├── it should mark the stream as canceled
                                 │  ├── it should call the sender hook
                                 │  └── it should ignore the revert
                                 └── when there is no reentrancy
                                    ├── it should cancel the stream
                                    ├── it should mark the stream as canceled
                                    ├── it should make the stream not cancelable
                                    ├── it should update the refunded amount
                                    ├── it should refund the sender
                                    ├── it should call the sender hook
                                    ├── it should emit a {MetadataUpdate} event
                                    └── it should emit a {CancelLockupStream} event
